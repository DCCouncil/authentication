server {
    listen 80;
    server_name authentication.dccode.gov;
    return 301 https://authentication.dccode.gov/$request_uri;
}

# The 'spdy' at the end of the listen command below turns on SPDY support.

server {
    listen 443 ssl spdy;
    server_name authentication.dccode.gov;

    # (You'll need to add your own commands to actually serve your website,

    location /static {
        proxy_pass      https://s3.amazonaws.com/authentication.dccode.gov/static;
        }

    #  like a root to static files, or a reverse proxy to an app process.)

    location / {
#        include uwsgi_params;
#        uwsgi_pass 127.0.0.1:5000;
    proxy_pass http://localhost:5000/;
    }

    # Path to certificate and private key.
    # The .crt may omit the root CA cert, if it's a standard CA that ships with clients.
    ssl_certificate /etc/nginx/ssl/keys/server.crt;
    ssl_certificate_key /etc/nginx/ssl/keys/private.key;

    include /etc/nginx/ssl/ssl.rules;
}
