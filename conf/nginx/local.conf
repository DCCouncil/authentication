server {
    listen 80;
    server_name SERVER_NAME;
    return 301 https://$host$request_uri;
}

# The 'spdy' at the end of the listen command below turns on SPDY support.

server {
    listen 443 ssl spdy;
    server_name SERVER_NAME;

    # (You'll need to add your own commands to actually serve your website,
    #  like a root to static files, or a reverse proxy to an app process.)

    location / {
        proxy_pass http://localhost:5000/;
        proxy_http_version 1.1;
        proxy_redirect off;

        proxy_set_header Host   $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_max_temp_file_size 0;

        proxy_connect_timeout 10;
        proxy_send_timeout    30;
        proxy_read_timeout    30;
    }

    # Path to certificate and private key.
    # The .crt may omit the root CA cert, if it's a standard CA that ships with clients.
    ssl_certificate /etc/nginx/ssl/keys/server.crt;
    ssl_certificate_key /etc/nginx/ssl/keys/private.key;

    include /etc/nginx/ssl/ssl.rules;
}